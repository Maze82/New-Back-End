-- MySQL Script generated by MySQL Workbench
-- Thu Sep 21 12:19:08 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema laundryk_Testing
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema laundryk_Testing
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `laundryk_Testing` DEFAULT CHARACTER SET latin1 ;
-- -----------------------------------------------------
-- Schema laundryk_erm
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema laundryk_erm
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `laundryk_erm` DEFAULT CHARACTER SET latin1 ;
USE `laundryk_Testing` ;

-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Container`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Container` (
  `cont_id` INT(11) NOT NULL COMMENT 'PK for table',
  `coname` TEXT NOT NULL COMMENT 'short name for container',
  `codesc` TEXT NOT NULL COMMENT 'long name for container',
  `cotype` VARCHAR(1) NOT NULL COMMENT 'type of container',
  `cocapacity` INT(11) NOT NULL COMMENT 'max container in kg. used for reporting and auto generated orders',
  `reg_dt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Date time container first registered in system',
  PRIMARY KEY (`cont_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'A container is anything that can hold product, bag, cage etc';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Customer` (
  `cust_id` INT(11) NOT NULL COMMENT 'customer PK',
  `cname` TEXT NOT NULL COMMENT 'short name of customer',
  `cdesc` TEXT NOT NULL COMMENT 'long desc of cust.',
  `ctype` INT(11) NOT NULL COMMENT 'customer types needs to be set later and change datatype for this column',
  PRIMARY KEY (`cust_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Location` (
  `locn_id` INT(11) NOT NULL COMMENT 'PK for table',
  `lname` TEXT NOT NULL COMMENT 'Short name for location',
  `ldesc` TEXT NOT NULL COMMENT 'descript for site may include direction hints',
  `lregion` INT(11) NOT NULL COMMENT 'not used yet. May be needed for location grouping later',
  PRIMARY KEY (`locn_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Location is anywhere a Container can be.';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`LocnCont`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`LocnCont` (
  `locn_id` INT(11) NOT NULL COMMENT 'FK to Location ',
  `cont_id` INT(11) NOT NULL COMMENT 'FK to Container',
  `recv_dt` DATETIME NOT NULL COMMENT 'Date time container was placed in the location',
  `disp_dt` DATETIME NOT NULL COMMENT 'Date time container was placed in the location',
  INDEX `fk_LocnCont_Location1_idx` (`locn_id` ASC),
  INDEX `fk_LocnCont_Container1_idx` (`cont_id` ASC),
  PRIMARY KEY (`locn_id`, `cont_id`, `recv_dt`),
  CONSTRAINT `fk_LocnCont_Location1`
    FOREIGN KEY (`locn_id`)
    REFERENCES `laundryk_Testing`.`Location` (`locn_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LocnCont_Container1`
    FOREIGN KEY (`cont_id`)
    REFERENCES `laundryk_Testing`.`Container` (`cont_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Stores location of the containers';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`LocnCust`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`LocnCust` (
  `locn_id` INT(11) NOT NULL COMMENT 'FK from Location',
  `cust_id` INT(11) NOT NULL COMMENT 'FK from Customer',
  INDEX `fk_LocnCust_Location1_idx` (`locn_id` ASC),
  PRIMARY KEY (`locn_id`, `cust_id`),
  INDEX `fk_LocnCust_Customer1_idx` (`cust_id` ASC),
  CONSTRAINT `fk_LocnCust_Location1`
    FOREIGN KEY (`locn_id`)
    REFERENCES `laundryk_Testing`.`Location` (`locn_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LocnCust_Customer1`
    FOREIGN KEY (`cust_id`)
    REFERENCES `laundryk_Testing`.`Customer` (`cust_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Records Locations for a Customer';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`RunCust`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`RunCust` (
  `run_id` INT(11) NOT NULL COMMENT 'FK to Run',
  `cust_id` INT(11) NOT NULL COMMENT 'FK to Customer',
  `rcstatus_fl` TEXT NOT NULL COMMENT 'Flag of the status',
  INDEX `fk_RunCust_Customer1_idx` (`cust_id` ASC),
  UNIQUE INDEX `cust_id_UNIQUE` (`cust_id` ASC),
  PRIMARY KEY (`run_id`, `cust_id`),
  CONSTRAINT `fk_RunCust_Customer1`
    FOREIGN KEY (`cust_id`)
    REFERENCES `laundryk_Testing`.`Customer` (`cust_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Run`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Run` (
  `run_id` INT(11) NOT NULL COMMENT 'PK for table',
  `rname` TEXT NOT NULL COMMENT 'Short name for run. Used in reports and drop down boxes',
  `rtime` TIME NOT NULL,
  `mon_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `tue_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `wed_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `thu_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `fri_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `sat_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `sun_fl` TEXT NOT NULL COMMENT 'flag specifies if this day is used in the run. Y or N',
  `rstatus_fl` VARCHAR(1) NOT NULL COMMENT 'status of the run prob Draft, Active, Pause',
  `rdesc` VARCHAR(250) NOT NULL COMMENT 'long description of run purpose etc',
  PRIMARY KEY (`run_id`),
  CONSTRAINT `fk_Run_RunCust1`
    FOREIGN KEY (`run_id`)
    REFERENCES `laundryk_Testing`.`RunCust` (`run_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Is the possible Runs day and time combo';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`LocnRun`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`LocnRun` (
  `locn_id` INT(11) NOT NULL COMMENT 'FK from Location',
  `run_id` INT(11) NOT NULL COMMENT 'FK of Run',
  INDEX `fk_LocnRun_Location1_idx` (`locn_id` ASC),
  INDEX `fk_LocnRun_Run1_idx` (`run_id` ASC),
  PRIMARY KEY (`locn_id`, `run_id`),
  CONSTRAINT `fk_LocnRun_Location1`
    FOREIGN KEY (`locn_id`)
    REFERENCES `laundryk_Testing`.`Location` (`locn_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LocnRun_Run1`
    FOREIGN KEY (`run_id`)
    REFERENCES `laundryk_Testing`.`Run` (`run_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'this assigns locations to a run for the system to do orders';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`orders` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ordered_date` INT(11) NOT NULL,
  `date_filled` INT(11) NOT NULL,
  `ward_id` INT(11) NOT NULL,
  `ordering_person` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `total_weight` DECIMAL(11,2) NOT NULL,
  `item_ordered` INT(11) NOT NULL,
  `filled_order` INT(11) NOT NULL,
  `filled_weight` DECIMAL(11,2) NOT NULL,
  `delivery_date` INT(12) NOT NULL,
  `bag_delivered` INT(11) NULL DEFAULT NULL COMMENT 'Bags delivered per order',
  `cage_delivered` INT(11) NULL DEFAULT NULL COMMENT 'Cages delivered per order',
  `createtime` INT(11) NOT NULL,
  `status` VARCHAR(255) NOT NULL,
  `comments` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_wardid` (`ward_id` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 15322
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `price` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'This is the base price for the item',
  `description` TEXT NOT NULL,
  `code` VARCHAR(255) NOT NULL,
  `type` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  `modifytime` INT(11) NOT NULL,
  `life_id` INT(11) NOT NULL,
  `dt_from` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'this defines when the row becomes active in the system',
  `dt_to` DATETIME NULL DEFAULT NULL COMMENT 'this defines when the row has been superceded',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code` (`code` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 394
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`OrdProdCont`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`OrdProdCont` (
  `order_id` INT(11) NOT NULL COMMENT 'FK to Order',
  `prod_id` INT(11) NOT NULL COMMENT 'FK to Product',
  `cont_id` INT(11) NOT NULL COMMENT 'Fk to Container',
  `qty` DECIMAL(6,2) NOT NULL COMMENT 'in kg. 9999.99 max value',
  `state` VARCHAR(1) NULL COMMENT 'Used to persist packing data. This lets us know what state the row is in.  Packed vs not packed. Possibly other states.',
  `opc_id` INT NOT NULL AUTO_INCREMENT COMMENT 'need this as a data space saver as a key to link items to order product container rows. ',
  INDEX `fk_OrdProdCont_orders1_idx` (`order_id` ASC),
  INDEX `fk_OrdProdCont_products1_idx` (`prod_id` ASC),
  INDEX `fk_OrdProdCont_Container1_idx` (`cont_id` ASC),
  UNIQUE INDEX `opc_id_UNIQUE` (`opc_id` ASC),
  PRIMARY KEY (`opc_id`),
  CONSTRAINT `fk_OrdProdCont_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `laundryk_Testing`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdProdCont_products1`
    FOREIGN KEY (`prod_id`)
    REFERENCES `laundryk_Testing`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdProdCont_Container1`
    FOREIGN KEY (`cont_id`)
    REFERENCES `laundryk_Testing`.`Container` (`cont_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'This stores the qty of product per container for an order';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`ProdCont`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`ProdCont` (
  `prod_id` INT(11) NOT NULL COMMENT 'FK to Product',
  `cont_id` INT(11) NOT NULL COMMENT 'FK to Container',
  `qty` INT(11) NOT NULL COMMENT 'Count of items in container',
  `pc_rcv_dt` DATETIME NOT NULL COMMENT 'Date container is counted back into the stock system',
  `pc_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Auto ID to ident a row. Used as the attachment for Items. ',
  `user_id` INT NOT NULL COMMENT 'this is the bag handler user. The person who did the count of items from the container.',
  `pcstatus` VARCHAR(1) NOT NULL DEFAULT 'c' COMMENT 'flag to ident which rows have been processed into a new order. c is counted and o is put into an order possibly v for validated. Auto value is c since new rows can only have come from the count process',
  INDEX `fk_ProdCont_Container1_idx` (`cont_id` ASC),
  INDEX `fk_ProdCont_products1_idx` (`prod_id` ASC),
  UNIQUE INDEX `pc_id_UNIQUE` (`pc_id` ASC),
  PRIMARY KEY (`pc_id`),
  CONSTRAINT `fk_ProdCont_Container1`
    FOREIGN KEY (`cont_id`)
    REFERENCES `laundryk_Testing`.`Container` (`cont_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProdCont_products1`
    FOREIGN KEY (`prod_id`)
    REFERENCES `laundryk_Testing`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'This stores the qty of product per container at end of run';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Reckon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Reckon` (
  `PK` INT(11) NOT NULL AUTO_INCREMENT,
  `cat1` VARCHAR(100) NULL DEFAULT NULL,
  `cat2` VARCHAR(100) NULL DEFAULT NULL,
  `blank4` VARCHAR(50) NULL DEFAULT NULL,
  `blank5` VARCHAR(50) NULL DEFAULT NULL,
  `Price` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`PK`))
ENGINE = InnoDB
AUTO_INCREMENT = 13424
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`ReckonImport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`ReckonImport` (
  `WardID` INT(11) NOT NULL DEFAULT '0',
  `blank2` INT(11) NULL DEFAULT NULL,
  `Cat1` VARCHAR(50) NOT NULL,
  `blank3` INT(11) NULL DEFAULT NULL,
  `Cat2` VARCHAR(50) NOT NULL,
  `Code` VARCHAR(10) NOT NULL,
  `LongCat1` VARCHAR(100) NOT NULL,
  `LongCat2` VARCHAR(100) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  `Price` FLOAT NOT NULL,
  PRIMARY KEY (`WardID`, `Code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`RunOrderCont`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`RunOrderCont` (
  `run_id` INT(11) NOT NULL COMMENT 'FK to Run table',
  `order_id` INT(11) NOT NULL COMMENT 'FK to Order table',
  `cont_id` INT(11) NOT NULL COMMENT 'FK to Container table',
  `disp_locn_id` INT(11) NOT NULL COMMENT 'FK to Location',
  `recv_locn_id` INT(11) NOT NULL COMMENT 'FK to Location',
  `disp_dt` DATETIME NOT NULL COMMENT 'Dispatch datetime',
  `recv_dt` DATETIME NOT NULL COMMENT 'Receive datetime',
  INDEX `fk_RunOrderCont_Run1_idx` (`run_id` ASC),
  INDEX `fk_RunOrderCont_orders1_idx` (`order_id` ASC),
  INDEX `fk_RunOrderCont_Container1_idx` (`cont_id` ASC),
  PRIMARY KEY (`run_id`, `order_id`, `cont_id`),
  CONSTRAINT `fk_RunOrderCont_Run1`
    FOREIGN KEY (`run_id`)
    REFERENCES `laundryk_Testing`.`Run` (`run_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RunOrderCont_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `laundryk_Testing`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RunOrderCont_Container1`
    FOREIGN KEY (`cont_id`)
    REFERENCES `laundryk_Testing`.`Container` (`cont_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'Stores the Containers for each Order on a Run';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`access_option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`access_option` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`customer_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`customer_product` (
  `cust_name` VARCHAR(256) NULL DEFAULT NULL COMMENT 'Customer name from the wards table',
  `prod_code` VARCHAR(50) NOT NULL COMMENT 'Code is from the code column in the products table',
  `pf_name` VARCHAR(50) NOT NULL COMMENT 'Price file name is from the price_file table',
  `active` VARCHAR(1) NOT NULL DEFAULT 'Y' COMMENT 'This decides if a particular product is available for selection by a Customer')
ENGINE = MyISAM
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`filtering_preferences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`filtering_preferences` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `user_id` INT(10) NOT NULL,
  `order_date_from` INT(11) NOT NULL,
  `order_date_to` INT(10) NOT NULL,
  `filled_date_from` INT(10) NOT NULL,
  `filled_date_to` INT(10) NOT NULL,
  `orderstatus` TEXT NOT NULL,
  `costcentres` TEXT NOT NULL,
  `productrange` VARCHAR(255) NOT NULL,
  `customers` VARCHAR(255) NOT NULL,
  `customertype` TEXT NOT NULL,
  `createtime` TEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 23
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`login_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`login_info` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `username` VARCHAR(35) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `permitted_area` VARCHAR(40) NOT NULL,
  `lastlogin` INT(11) NOT NULL,
  `createtime` INT(15) NOT NULL,
  `modifytime` INT(15) NOT NULL,
  `status` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 54
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`order_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`order_products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `product_quantity` INT(11) NOT NULL,
  `total_product_weight` VARCHAR(40) NOT NULL,
  `dispatched_quantity` INT(11) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_products_orders1_idx` (`order_id` ASC),
  INDEX `fk_order_products_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_order_products_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `laundryk_Testing`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_products_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `laundryk_Testing`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 161035
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`pfName`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`pfName` (
  `pf_id` INT(11) NOT NULL AUTO_INCREMENT,
  `pf_name` TEXT NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`pf_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 71
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`price_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`price_file` (
  `item_id` INT(11) NOT NULL DEFAULT '0' COMMENT 'Item Id from the Products Table',
  `price` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'Customer specific price',
  `pf_id` INT(11) NOT NULL DEFAULT '0' COMMENT 'Customer price file name',
  `ext_code` VARCHAR(10) NOT NULL COMMENT 'External code to accounting system',
  PRIMARY KEY (`item_id`, `pf_id`),
  INDEX `pf_id` (`pf_id` ASC),
  INDEX `ext_code` (`ext_code` ASC),
  CONSTRAINT `price_file_ibfk_1`
    FOREIGN KEY (`item_id`)
    REFERENCES `laundryk_Testing`.`products` (`id`),
  CONSTRAINT `price_file_ibfk_2`
    FOREIGN KEY (`pf_id`)
    REFERENCES `laundryk_Testing`.`pfName` (`pf_id`),
  CONSTRAINT `price_file_ibfk_3`
    FOREIGN KEY (`ext_code`)
    REFERENCES `laundryk_Testing`.`products` (`code`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'price file for specific customer pricing ';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`region`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`region` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `parent` INT(11) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `short_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 61
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`test`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`test` (
  `id` INT(11) NOT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`users` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `tfn_no` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `region` VARCHAR(255) NOT NULL,
  `picture` VARCHAR(255) NOT NULL,
  `mobile_phone` VARCHAR(20) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  `fax` VARCHAR(20) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  `state` VARCHAR(50) NOT NULL,
  `country` VARCHAR(50) NOT NULL,
  `postal_code` INT(20) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `createtime` INT(15) NOT NULL,
  `modifytime` INT(15) NOT NULL,
  `status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`ward_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`ward_category` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `pin` VARCHAR(255) NOT NULL,
  `category_name` VARCHAR(255) NOT NULL,
  `type` VARCHAR(100) NOT NULL,
  `template` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 188
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`ward_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`ward_products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ward_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 2703
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`wards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`wards` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ward_category` INT(11) NOT NULL,
  `ward_name` VARCHAR(255) NOT NULL,
  `ordering_person` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `pf_id` INT(3) NOT NULL COMMENT 'Price file name from the price file table',
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 332
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`Item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Item` (
  `item_id` INT NOT NULL COMMENT 'This is the system identifier for the item. ',
  `iname` VARCHAR(45) NOT NULL,
  `idt_from` DATETIME NOT NULL COMMENT 'when item entered active stock',
  `idt_to` DATETIME NULL COMMENT 'when item permanently leaves active stock. Leave null and use status if item needs to be temporarily paused from stock.',
  `track_id` VARCHAR(45) NOT NULL COMMENT 'Place for the RFID number for the item if it has one. Separate to item_id because we may want to track at item level for some items even if they don’t have an RFID number. This is why the column isn’t called RFID.',
  `istatus` VARCHAR(1) NOT NULL DEFAULT 'A' COMMENT 'this is to track item state in the system. Active. Retired. Lost. Damaged. Hold. etcetera. ',
  `prod_id` VARCHAR(11) NOT NULL COMMENT 'Product is the class of the item',
  PRIMARY KEY (`item_id`),
  UNIQUE INDEX `track_id_UNIQUE` (`track_id` ASC))
ENGINE = InnoDB
COMMENT = 'This table tracks products at the individual item level. Is core to RFID tracking function. ';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`ProdContItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`ProdContItem` (
  `pc_id` INT NOT NULL COMMENT 'auto key from ProdCont table.',
  `track_id` VARCHAR(45) NOT NULL COMMENT 'this is the item scanned when the truck arrives.',
  PRIMARY KEY (`pc_id`, `track_id`),
  INDEX `fk_ProdContItem_Item1_idx` (`track_id` ASC),
  CONSTRAINT `fk_ProdContItem_ProdCont1`
    FOREIGN KEY (`pc_id`)
    REFERENCES `laundryk_Testing`.`ProdCont` (`pc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProdContItem_Item1`
    FOREIGN KEY (`track_id`)
    REFERENCES `laundryk_Testing`.`Item` (`track_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This is the capture table for when items come back in and we scan them.';


-- -----------------------------------------------------
-- Table `laundryk_Testing`.`OrdProdContItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`OrdProdContItem` (
  `opc_id` INT NOT NULL,
  `track_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`opc_id`, `track_id`),
  INDEX `fk_OrdProdContItem_Item1_idx` (`track_id` ASC),
  CONSTRAINT `fk_OrdProdContItem_OrdProdCont1`
    FOREIGN KEY (`opc_id`)
    REFERENCES `laundryk_Testing`.`OrdProdCont` (`opc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrdProdContItem_Item1`
    FOREIGN KEY (`track_id`)
    REFERENCES `laundryk_Testing`.`Item` (`track_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This captures the items that are in the containers for the order';

USE `laundryk_erm` ;

-- -----------------------------------------------------
-- Table `laundryk_erm`.`access_option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`access_option` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`filtering_preferences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`filtering_preferences` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `user_id` INT(10) NOT NULL,
  `order_date_from` INT(11) NOT NULL,
  `order_date_to` INT(10) NOT NULL,
  `filled_date_from` INT(10) NOT NULL,
  `filled_date_to` INT(10) NOT NULL,
  `orderstatus` TEXT NOT NULL,
  `costcentres` TEXT NOT NULL,
  `productrange` VARCHAR(255) NOT NULL,
  `customers` VARCHAR(255) NOT NULL,
  `customertype` TEXT NOT NULL,
  `createtime` TEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 25
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`login_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`login_info` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `username` VARCHAR(35) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `permitted_area` VARCHAR(40) NOT NULL,
  `lastlogin` INT(11) NOT NULL,
  `createtime` INT(15) NOT NULL,
  `modifytime` INT(15) NOT NULL,
  `status` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 52
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`order_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`order_products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `order_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `product_quantity` INT(11) NOT NULL,
  `total_product_weight` VARCHAR(40) NOT NULL,
  `dispatched_quantity` INT(11) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 183386
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`orders` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ordered_date` INT(11) NOT NULL,
  `date_filled` INT(11) NOT NULL,
  `ward_id` INT(11) NOT NULL,
  `ordering_person` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `total_weight` VARCHAR(255) NOT NULL,
  `item_ordered` VARCHAR(255) NOT NULL,
  `filled_order` VARCHAR(255) NOT NULL,
  `filled_weight` VARCHAR(255) NOT NULL,
  `delivery_date` INT(12) NOT NULL,
  `createtime` INT(11) NOT NULL,
  `status` VARCHAR(255) NOT NULL,
  `comments` TEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 17342
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`price_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`price_file` (
  `item_id` INT(11) NOT NULL DEFAULT '0' COMMENT 'Item Id from the Products Table',
  `price` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'Customer specific price',
  `pf_id` INT(11) NOT NULL DEFAULT '0' COMMENT 'Customer price file name',
  `ext_code` VARCHAR(10) NOT NULL COMMENT 'External code to accounting system',
  PRIMARY KEY (`pf_id`, `item_id`),
  INDEX `item_id` (`item_id` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COMMENT = 'price file for specific customer pricing ';


-- -----------------------------------------------------
-- Table `laundryk_erm`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `life_id` INT(11) NULL DEFAULT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `dt_from` DATETIME NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'This defines when the product starts being active',
  `dt_to` DATETIME NULL DEFAULT NULL,
  `code` VARCHAR(255) NOT NULL,
  `type` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  `modifytime` INT(11) NOT NULL,
  `price` DECIMAL(10,2) NULL DEFAULT NULL COMMENT 'This is the base price for the item',
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 396
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`region`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`region` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `parent` INT(11) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `short_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 61
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`users` (
  `id` INT(10) NOT NULL AUTO_INCREMENT,
  `tfn_no` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `region` VARCHAR(255) NOT NULL,
  `picture` VARCHAR(255) NOT NULL,
  `mobile_phone` VARCHAR(20) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  `fax` VARCHAR(20) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `city` VARCHAR(50) NOT NULL,
  `state` VARCHAR(50) NOT NULL,
  `country` VARCHAR(50) NOT NULL,
  `postal_code` INT(20) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `createtime` INT(15) NOT NULL,
  `modifytime` INT(15) NOT NULL,
  `status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`ward_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`ward_category` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `pin` VARCHAR(255) NOT NULL,
  `category_name` VARCHAR(255) NOT NULL,
  `type` VARCHAR(100) NOT NULL,
  `template` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 208
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`ward_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`ward_products` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ward_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `product_weight` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 3162
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `laundryk_erm`.`wards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`wards` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `ward_category` INT(11) NOT NULL,
  `ward_name` VARCHAR(255) NOT NULL,
  `ordering_person` VARCHAR(255) NOT NULL,
  `pf_id` VARCHAR(60) NULL DEFAULT NULL COMMENT 'This defines the price file associated with this Customer',
  `email` VARCHAR(255) NOT NULL,
  `createtime` INT(11) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = MyISAM
AUTO_INCREMENT = 348
DEFAULT CHARACTER SET = latin1;

USE `laundryk_Testing` ;

-- -----------------------------------------------------
-- Placeholder table for view `laundryk_Testing`.`MS_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`MS_Orders` (`id` INT, `Customer` INT, `Customer No` INT, `Cost Centre Name` INT, `Cost Centre No` INT, `Product` INT, `Item Code` INT, `Items Order` INT, `Date Ordered` INT);

-- -----------------------------------------------------
-- Placeholder table for view `laundryk_Testing`.`Weekly_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_Testing`.`Weekly_Orders` (`id` INT, `Customer` INT, `Cost Centre` INT, `Product` INT, `Item Code` INT, `Items Order` INT, `Date Ordered` INT, `Filled Date` INT);

-- -----------------------------------------------------
-- View `laundryk_Testing`.`MS_Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `laundryk_Testing`.`MS_Orders`;
USE `laundryk_Testing`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`laundryk`@`localhost` SQL SECURITY DEFINER VIEW `laundryk_Testing`.`MS_Orders` AS select `laundryk_Testing`.`orders`.`id` AS `id`,`laundryk_Testing`.`ward_category`.`category_name` AS `Customer`,`laundryk_Testing`.`ward_category`.`id` AS `Customer No`,`laundryk_Testing`.`wards`.`ward_name` AS `Cost Centre Name`,`laundryk_Testing`.`wards`.`id` AS `Cost Centre No`,`laundryk_Testing`.`products`.`product_name` AS `Product`,`laundryk_Testing`.`products`.`code` AS `Item Code`,`laundryk_Testing`.`order_products`.`product_quantity` AS `Items Order`,date_format(from_unixtime(`laundryk_Testing`.`orders`.`ordered_date`),'%d-%m-%Y') AS `Date Ordered` from ((((`laundryk_Testing`.`orders` join `laundryk_Testing`.`order_products` on((`laundryk_Testing`.`orders`.`id` = `laundryk_Testing`.`order_products`.`order_id`))) join `laundryk_Testing`.`wards` on((`laundryk_Testing`.`orders`.`ward_id` = `laundryk_Testing`.`wards`.`id`))) join `laundryk_Testing`.`ward_category` on((`laundryk_Testing`.`wards`.`ward_category` = `laundryk_Testing`.`ward_category`.`id`))) join `laundryk_Testing`.`products` on((`laundryk_Testing`.`order_products`.`product_id` = `laundryk_Testing`.`products`.`id`))) order by `laundryk_Testing`.`orders`.`id` desc;

-- -----------------------------------------------------
-- View `laundryk_Testing`.`Weekly_Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `laundryk_Testing`.`Weekly_Orders`;
USE `laundryk_Testing`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`laundryk`@`localhost` SQL SECURITY DEFINER VIEW `laundryk_Testing`.`Weekly_Orders` AS select `laundryk_Testing`.`orders`.`id` AS `id`,`laundryk_Testing`.`ward_category`.`category_name` AS `Customer`,`laundryk_Testing`.`wards`.`ward_name` AS `Cost Centre`,`laundryk_Testing`.`products`.`product_name` AS `Product`,`laundryk_Testing`.`products`.`code` AS `Item Code`,`laundryk_Testing`.`order_products`.`product_quantity` AS `Items Order`,date_format(from_unixtime(`laundryk_Testing`.`orders`.`ordered_date`),'%d-%m-%Y') AS `Date Ordered`,date_format(from_unixtime(`laundryk_Testing`.`orders`.`date_filled`),'%d-%m-%Y') AS `Filled Date` from ((((`laundryk_Testing`.`orders` join `laundryk_Testing`.`order_products` on((`laundryk_Testing`.`orders`.`id` = `laundryk_Testing`.`order_products`.`order_id`))) join `laundryk_Testing`.`wards` on((`laundryk_Testing`.`orders`.`ward_id` = `laundryk_Testing`.`wards`.`id`))) join `laundryk_Testing`.`ward_category` on((`laundryk_Testing`.`wards`.`ward_category` = `laundryk_Testing`.`ward_category`.`id`))) join `laundryk_Testing`.`products` on((`laundryk_Testing`.`order_products`.`product_id` = `laundryk_Testing`.`products`.`id`))) order by `laundryk_Testing`.`orders`.`id` desc;
USE `laundryk_erm` ;

-- -----------------------------------------------------
-- Placeholder table for view `laundryk_erm`.`MS_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`MS_Orders` (`id` INT, `Customer` INT, `Customer No` INT, `Cost Centre Name` INT, `Cost Centre No` INT, `Product` INT, `Item Code` INT, `Items Order` INT, `Date Ordered` INT);

-- -----------------------------------------------------
-- Placeholder table for view `laundryk_erm`.`Weekly_Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `laundryk_erm`.`Weekly_Orders` (`id` INT, `Customer` INT, `Cost Centre` INT, `Product` INT, `Item Code` INT, `Items Order` INT, `Date Ordered` INT, `Filled Date` INT);

-- -----------------------------------------------------
-- View `laundryk_erm`.`MS_Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `laundryk_erm`.`MS_Orders`;
USE `laundryk_erm`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`laundryk`@`localhost` SQL SECURITY DEFINER VIEW `laundryk_erm`.`MS_Orders` AS select `laundryk_erm`.`orders`.`id` AS `id`,`laundryk_erm`.`ward_category`.`category_name` AS `Customer`,`laundryk_erm`.`ward_category`.`id` AS `Customer No`,`laundryk_erm`.`wards`.`ward_name` AS `Cost Centre Name`,`laundryk_erm`.`wards`.`id` AS `Cost Centre No`,`laundryk_erm`.`products`.`product_name` AS `Product`,`laundryk_erm`.`products`.`code` AS `Item Code`,`laundryk_erm`.`order_products`.`product_quantity` AS `Items Order`,date_format(from_unixtime(`laundryk_erm`.`orders`.`ordered_date`),'%d-%m-%Y') AS `Date Ordered` from ((((`laundryk_erm`.`orders` join `laundryk_erm`.`order_products` on((`laundryk_erm`.`orders`.`id` = `laundryk_erm`.`order_products`.`order_id`))) join `laundryk_erm`.`wards` on((`laundryk_erm`.`orders`.`ward_id` = `laundryk_erm`.`wards`.`id`))) join `laundryk_erm`.`ward_category` on((`laundryk_erm`.`wards`.`ward_category` = `laundryk_erm`.`ward_category`.`id`))) join `laundryk_erm`.`products` on((`laundryk_erm`.`order_products`.`product_id` = `laundryk_erm`.`products`.`id`))) order by `laundryk_erm`.`orders`.`id` desc;

-- -----------------------------------------------------
-- View `laundryk_erm`.`Weekly_Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `laundryk_erm`.`Weekly_Orders`;
USE `laundryk_erm`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`laundryk`@`localhost` SQL SECURITY DEFINER VIEW `laundryk_erm`.`Weekly_Orders` AS select `laundryk_erm`.`orders`.`id` AS `id`,`laundryk_erm`.`ward_category`.`category_name` AS `Customer`,`laundryk_erm`.`wards`.`ward_name` AS `Cost Centre`,`laundryk_erm`.`products`.`product_name` AS `Product`,`laundryk_erm`.`products`.`code` AS `Item Code`,`laundryk_erm`.`order_products`.`product_quantity` AS `Items Order`,date_format(from_unixtime(`laundryk_erm`.`orders`.`ordered_date`),'%d-%m-%Y') AS `Date Ordered`,date_format(from_unixtime(`laundryk_erm`.`orders`.`date_filled`),'%d-%m-%Y') AS `Filled Date` from ((((`laundryk_erm`.`orders` join `laundryk_erm`.`order_products` on((`laundryk_erm`.`orders`.`id` = `laundryk_erm`.`order_products`.`order_id`))) join `laundryk_erm`.`wards` on((`laundryk_erm`.`orders`.`ward_id` = `laundryk_erm`.`wards`.`id`))) join `laundryk_erm`.`ward_category` on((`laundryk_erm`.`wards`.`ward_category` = `laundryk_erm`.`ward_category`.`id`))) join `laundryk_erm`.`products` on((`laundryk_erm`.`order_products`.`product_id` = `laundryk_erm`.`products`.`id`))) order by `laundryk_erm`.`orders`.`id` desc;
USE `laundryk_Testing`;

DELIMITER $$
USE `laundryk_Testing`$$
CREATE
DEFINER=`laundryk`@`localhost`
TRIGGER `laundryk_Testing`.`Reject Code ""`
BEFORE INSERT ON `laundryk_Testing`.`products`
FOR EACH ROW
BEGIN
IF new.code = ""THEN SET 
new.code = null;
END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
